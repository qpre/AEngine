// Generated by CoffeeScript 1.6.3
(function() {
  var LIVERELOAD_PORT, lrSnippet, mountFolder;

  LIVERELOAD_PORT = 35729;

  lrSnippet = require("connect-livereload")({
    port: LIVERELOAD_PORT
  });

  mountFolder = function(connect, dir) {
    return connect["static"](require("path").resolve(dir));
  };

  module.exports = function(grunt) {
    grunt.initConfig({
      pkg: grunt.file.readJSON("package.json"),
      closurecompiler: {
        all: {
          files: {
            "build/iluvatar-core.js": ['src/**/*.js']
          },
          options: {
            "compilation_level": "ADVANCED_OPTIMIZATIONS",
            "max_processes": 5,
            "banner": "/* hello world! */"
          }
        }
      },
      bower: {
        install: {}
      },
      copy: {
        app: {
          files: [
          {
            expand: true,
            cwd: "app/extern/",
            src: "**/*",
            dest: "build/extern/",
            filter: "isFile"
          }, {
            expand: true,
            flatten: true,
            src: ["app/*.html"],
            dest: "build/"
          }
          ]
        }
      },
      clean: {
        app: {
          src: ["build"]
        }
      },
      watch: {
        bower: {
          files: ["src/bower_components/*"]
        },
        js: {
          files: ["src/**/*.js"],
          tasks: ["closurecompiler:all"]
        },
        livereload: {
          options: {
            livereload: LIVERELOAD_PORT
          },
          files: ["build/{scripts,assets}/**/*"]
        }
      },
      connect: {
        options: {
          port: 9001,
          hostname: "localhost"
        },
        livereload: {
          options: {
            middleware: function(connect) {
              return [lrSnippet, mountFolder(connect, "build")];
            }
          }
        }
      },
      open: {
        server: {
          path: "http://localhost:<%= connect.options.port %>"
        }
      }
    });

grunt.loadNpmTasks('grunt-closurecompiler');
grunt.loadNpmTasks("grunt-contrib-clean");
grunt.loadNpmTasks("grunt-contrib-copy");
grunt.loadNpmTasks("grunt-contrib-watch");
grunt.loadNpmTasks("grunt-open");
grunt.loadNpmTasks("grunt-contrib-connect");
grunt.loadNpmTasks("grunt-bower-task");
grunt.registerTask("build", ["clean", "bower:install", "closurecompiler:all", "copy"]);

grunt.registerTask("server", function(target) {

  if (target === "build") {
    return grunt.task.run(["build", "open", "connect:dist:keepalive"]);
  }

  return grunt.task.run(["build", "connect:livereload", "open", "watch"]);
});

return grunt.registerTask("default", ["build"]);
};

}).call(this);
